const languageSelect = document.getElementById('language-select');
const conversationArea = document.getElementById('conversation-area');
const modeToggle = document.getElementById('mode-toggle');

// Language code mapping
const langCodeMap = {
  austria: 'de',
  belgium: 'nl',
  czech: 'cs',
  denmark: 'da',
  estonia: 'et',
  finland: 'fi',
  france: 'fr',
  germany: 'de',
  greece: 'el',
  hungary: 'hu',
  iceland: 'is',
  italy: 'it',
  latvia: 'lv',
  liechtenstein: 'de',
  lithuania: 'lt',
  luxembourg: 'lb',
  malta: 'mt',
  netherlands: 'nl',
  norway: 'no',
  poland: 'pl',
  portugal: 'pt',
  slovakia: 'sk',
  slovenia: 'sl',
  spain: 'es',
  sweden: 'sv',
  switzerland: 'de',
  russian: 'ru',
  albania: 'sq',
  andorra: 'ca',
  armenia: 'hy',
  azerbaijan: 'az',
  bosnia: 'bs',
  bulgaria: 'bg',
  croatia: 'hr',
  cyprus: 'el',
  georgia: 'ka',
  ireland: 'en',
  kosovo: 'sq',
  moldova: 'ro',
  monaco: 'fr',
  montenegro: 'sr',
  northmacedonia: 'mk',
  romania: 'ro',
  sanmarino: 'it',
  serbia: 'sr',
  turkey: 'tr',
  ukraine: 'uk',
  unitedkingdom: 'en',
  vatican: 'la'
};

// Global variables
let currentLanguage = '';
let currentData = [];
let favorites = JSON.parse(localStorage.getItem('speakeu_favorites')) || {};
let showingFavorites = false;

// Page load initialization
window.addEventListener('DOMContentLoaded', () => {
  const savedLang = localStorage.getItem('selectedLanguage');
  if (savedLang) {
    languageSelect.value = savedLang;
    loadLanguage(savedLang);
  } else {
    showHomePage();
  }

  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.body.classList.add('dark-mode');
    modeToggle.textContent = 'ЁЯМЩ';
  } else {
    document.body.classList.remove('dark-mode');
    modeToggle.textContent = 'тШАя╕П';
  }
});

// Language selection
languageSelect.addEventListener('change', () => {
  const lang = languageSelect.value;
  if (!lang) {
    showHomePage();
    return;
  }
  localStorage.setItem('selectedLanguage', lang);
  loadLanguage(lang);
});

// Load language data
function loadLanguage(lang) {
  currentLanguage = lang;
  showLoadingState();
  
  fetch(`languages/${lang}.json`)
    .then(res => {
      if (!res.ok) {
        throw new Error(`HTTP ${res.status}: ${res.statusText}`);
      }
      return res.json();
    })
    .then(data => {
      if (!Array.isArray(data) || data.length === 0) {
        throw new Error('Data format is invalid or empty');
      }
      currentData = data;
      hideHomePage();
      showFavoritesControls();
      renderVocabulary(data, langCodeMap[lang]);
    })
    .catch(error => {
      showError(`ржнрж╛рж╖рж╛рж░ ржбрзЗржЯрж╛ рж▓рзЛржб ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ: ${error.message}`);
    });
}

// Show loading state
function showLoadingState() {
  conversationArea.innerHTML = `
    <div class="loading-container" style="text-align: center; padding: 40px;">
      <div class="loading-spinner" style="font-size: 2rem;">тП│</div>
      <p>ржбрзЗржЯрж╛ рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...</p>
    </div>
  `;
}

// Render vocabulary with favorites
function renderVocabulary(list, langKey) {
  hideError();
  conversationArea.innerHTML = '';

  if (!Array.isArray(list) || list.length === 0) {
    showError('ржПржЗ ржнрж╛рж╖рж╛рж░ ржЬржирзНржп ржХрзЛржирзЛ ржбрзЗржЯрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред');
    return;
  }

  // Filter data based on current view
  let dataToShow = list;
  if (showingFavorites) {
    const langFavorites = favorites[currentLanguage] || [];
    dataToShow = list.filter((item, index) => langFavorites.includes(index));
    
    if (dataToShow.length === 0) {
      conversationArea.innerHTML = `
        <div class="no-favorites" style="text-align: center; padding: 40px;">
          <h3>тЭдя╕П ржХрзЛржирзЛ ржлрзЗржнрж╛рж░рж┐ржЯ ржЖржЗржЯрзЗржо ржирзЗржЗ</h3>
          <p>ржХрж┐ржЫрзБ рж╢ржмрзНржж ржлрзЗржнрж╛рж░рж┐ржЯ ржХрж░рзБржи ржкрзНрж░ржержорзЗред</p>
          <button onclick="showAllItems()" class="control-btn">рж╕ржм ржжрзЗржЦрзБржи</button>
        </div>
      `;
      return;
    }
  }

  // Add favorites controls HTML
  const favoritesControlsHtml = `
    <div id="favorites-controls">
      <div class="favorites-header">
        <h3>ЁЯУЛ ${showingFavorites ? 'ржлрзЗржнрж╛рж░рж┐ржЯ рждрж╛рж▓рж┐ржХрж╛' : 'рж╕ржм ржХржерзЛржкржХржержи'}</h3>
        <div class="favorites-buttons">
          <button id="show-all-btn" class="control-btn ${!showingFavorites ? 'active' : ''}" onclick="showAllItems()">рж╕ржм ржжрзЗржЦрзБржи</button>
          <button id="show-favorites-btn" class="control-btn ${showingFavorites ? 'active' : ''}" onclick="showFavoriteItems()">ржлрзЗржнрж╛рж░рж┐ржЯ ржжрзЗржЦрзБржи</button>
          <button id="export-favorites-btn" class="control-btn" onclick="exportFavorites()">ЁЯУд Export</button>
          <button id="import-favorites-btn" class="control-btn" onclick="importFavorites()">ЁЯУе Import</button>
        </div>
      </div>
    </div>
  `;

  conversationArea.innerHTML = favoritesControlsHtml;

  dataToShow.forEach((item, displayIndex) => {
    const originalIndex = showingFavorites ? 
      list.findIndex(original => original === item) : displayIndex;
    
    const localLang = item[langKey] || 'тАФ';
    const bn = item.bn || 'тАФ';
    const bnMeaning = item.bnMeaning || 'тАФ';
    const en = item.en || 'тАФ';

    const isFavorited = (favorites[currentLanguage] || []).includes(originalIndex);

    const div = document.createElement('div');
    div.className = 'conversation-item';
    div.innerHTML = `
      <button class="favorite-btn ${isFavorited ? 'favorited' : ''}" 
              onclick="toggleFavorite(${originalIndex})" 
              title="${isFavorited ? 'ржлрзЗржнрж╛рж░рж┐ржЯ ржерзЗржХрзЗ рж╕рж░рж╛ржи' : 'ржлрзЗржнрж╛рж░рж┐ржЯ ржХрж░рзБржи'}">
        ${isFavorited ? 'тЭдя╕П' : 'ЁЯдН'}
      </button>
      <div>ЁЯЧгя╕П <strong>${localLang}</strong></div>
      <div>ЁЯУЭ <span>${bn}</span></div>
      <div>ЁЯУШ <em>${bnMeaning}</em></div>
      <div>ЁЯФд <span>${en}</span></div>
    `;
    conversationArea.appendChild(div);
  });
}

// Toggle favorite status
function toggleFavorite(index) {
  if (!favorites[currentLanguage]) {
    favorites[currentLanguage] = [];
  }
  
  const favIndex = favorites[currentLanguage].indexOf(index);
  if (favIndex > -1) {
    favorites[currentLanguage].splice(favIndex, 1);
  } else {
    favorites[currentLanguage].push(index);
  }
  
  localStorage.setItem('speakeu_favorites', JSON.stringify(favorites));
  
  // Re-render current view
  if (currentData.length > 0) {
    renderVocabulary(currentData, langCodeMap[currentLanguage]);
  }
}

// Show all items
function showAllItems() {
  showingFavorites = false;
  if (currentData.length > 0) {
    renderVocabulary(currentData, langCodeMap[currentLanguage]);
  }
}

// Show favorite items only
function showFavoriteItems() {
  showingFavorites = true;
  if (currentData.length > 0) {
    renderVocabulary(currentData, langCodeMap[currentLanguage]);
  }
}

// Export favorites
function exportFavorites() {
  const exportData = {
    exportDate: new Date().toISOString(),
    appName: 'Speak EU',
    version: '1.0',
    favorites: favorites
  };
  
  const dataStr = JSON.stringify(exportData, null, 2);
  const dataBlob = new Blob([dataStr], {type: 'application/json'});
  
  const link = document.createElement('a');
  link.href = URL.createObjectURL(dataBlob);
  link.download = `speak-eu-favorites-${new Date().toISOString().split('T')[0]}.json`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  
  alert('ржлрзЗржнрж╛рж░рж┐ржЯ рждрж╛рж▓рж┐ржХрж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ Export ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!');
}

// Import favorites
function importFavorites() {
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = '.json';
  
  input.onchange = function(e) {
    const file = e.target.files[0];
    if (!file) return;
    
    const reader = new FileReader();
    reader.onload = function(e) {
      try {
        const importData = JSON.parse(e.target.result);
        
        if (importData.favorites && typeof importData.favorites === 'object') {
          favorites = {...favorites, ...importData.favorites};
          localStorage.setItem('speakeu_favorites', JSON.stringify(favorites));
          
          // Re-render current view
          if (currentData.length > 0) {
            renderVocabulary(currentData, langCodeMap[currentLanguage]);
          }
          
          alert('ржлрзЗржнрж╛рж░рж┐ржЯ рждрж╛рж▓рж┐ржХрж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ Import ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!');
        } else {
          throw new Error('Invalid file format');
        }
      } catch (error) {
        alert('ржлрж╛ржЗрж▓ Import ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред рж╕ржарж┐ржХ JSON ржлрж╛ржЗрж▓ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред');
      }
    };
    reader.readAsText(file);
  };
  
  input.click();
}

// Reset all data
function resetAllData() {
  if (confirm('ржЖржкржирж┐ ржХрж┐ ржирж┐рж╢рзНржЪрж┐ржд ржпрзЗ рж╕ржм ржбрзЗржЯрж╛ рж░рж┐рж╕рзЗржЯ ржХрж░рждрзЗ ржЪрж╛ржи? ржПржЯрж┐ ржЖржкржирж╛рж░ рж╕ржм ржлрзЗржнрж╛рж░рж┐ржЯ ржПржмржВ рж╕рзЗржЯрж┐ржВрж╕ ржорзБржЫрзЗ ржжрзЗржмрзЗред')) {
    localStorage.clear();
    favorites = {};
    currentData = [];
    currentLanguage = '';
    showingFavorites = false;
    languageSelect.value = '';
    showHomePage();
    alert('рж╕ржм ржбрзЗржЯрж╛ рж╕ржлрж▓ржнрж╛ржмрзЗ рж░рж┐рж╕рзЗржЯ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ!');
  }
}

// Show error
function showError(message) {
  const errorDisplay = document.getElementById('error-display');
  const errorMessage = document.getElementById('error-message');
  
  if (errorDisplay && errorMessage) {
    errorMessage.textContent = message;
    errorDisplay.style.display = 'block';
  }
  
  hideHomePage();
  hideFavoritesControls();
}

// Hide error
function hideError() {
  const errorDisplay = document.getElementById('error-display');
  if (errorDisplay) {
    errorDisplay.style.display = 'none';
  }
}

// Show/hide homepage
function showHomePage() {
  const homepage = document.getElementById('homepage-content');
  if (homepage) {
    homepage.style.display = 'block';
  }
  hideError();
  hideFavoritesControls();
}

function hideHomePage() {
  const homepage = document.getElementById('homepage-content');
  if (homepage) {
    homepage.style.display = 'none';
  }
}

// Show/hide favorites controls
function showFavoritesControls() {
  // Controls are now part of renderVocabulary function
}

function hideFavoritesControls() {
  const controls = document.getElementById('favorites-controls');
  if (controls) {
    controls.style.display = 'none';
  }
}

// Page navigation functions
function showAboutPage() {
  hideHomePage();
  hideError();
  hideFavoritesControls();
  
  conversationArea.innerHTML = `
    <div class="page-content">
      <h2>ЁЯУЦ ржЖржорж╛ржжрзЗрж░ рж╕ржорзНржкрж░рзНржХрзЗ</h2>
      <p><strong>Speak EU</strong> ржПржХржЯрж┐ ржЖржзрзБржирж┐ржХ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржнрж╛рж╖рж╛ рж╢рж┐ржХрзНрж╖рж╛рж░ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржо, ржпрж╛ ржЗржЙрж░рзЛржкрзЗрж░ ржмрж┐ржнрж┐ржирзНржи ржжрзЗрж╢рзЗ ржмрж╕ржмрж╛рж╕рж░ржд ржЕржнрж┐ржмрж╛рж╕рзА, ржХрж░рзНржоржЬрзАржмрзА ржПржмржВ ржкрж░рзНржпржЯржХржжрзЗрж░ ржХржерж╛ ржорж╛ржерж╛ржпрж╝ рж░рзЗржЦрзЗ рждрзИрж░рж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред</p>
      
      <h3>ЁЯОп ржЖржорж╛ржжрзЗрж░ рж▓ржХрзНрж╖рзНржп</h3>
      <ul>
        <li>ржЗржЙрж░рзЛржкрзЗрж░ рзкрзл+ ржнрж╛рж╖рж╛ржпрж╝ ржжрзИржиржирзНржжрж┐ржи ржХржерзЛржкржХржержи рж╢рзЗржЦрж╛ржирзЛ</li>
        <li>ржкрзНрж░ржмрж╛рж╕рзА ржЬрзАржмржирзЗ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ ржнрж╛рж╖рж╛ржЧржд ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬржирзЗ рж╕рж╣рж╛ржпрж╝рждрж╛</li>
        <li>рж╕рж╣ржЬ ржУ ржХрж╛рж░рзНржпржХрж░ ржнрж╛рж╖рж╛ рж╢рж┐ржХрзНрж╖рж╛рж░ ржкржжрзНржзрждрж┐ ржкрзНрж░ржжрж╛ржи</li>
        <li>ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ ржнрж╛рж╖рж╛ рж╢рж┐ржХрзНрж╖рж╛ржпрж╝ ржЕржмржжрж╛ржи рж░рж╛ржЦрж╛</li>
      </ul>
      
      <h3>тЬи ржмрзИрж╢рж┐рж╖рзНржЯрзНржпрж╕ржорзВрж╣</h3>
      <ul>
        <li>ЁЯФд ржмрж╛ржВрж▓рж╛ ржЙржЪрзНржЪрж╛рж░ржг рж╕рж╣ ржкрзНрж░рждрж┐ржЯрж┐ рж╢ржмрзНржж</li>
        <li>тЭдя╕П ржлрзЗржнрж╛рж░рж┐ржЯ рж╕рж┐рж╕рзНржЯрзЗржо</li>
        <li>ЁЯМЩ ржбрж╛рж░рзНржХ/рж▓рж╛ржЗржЯ ржорзЛржб</li>
        <li>ЁЯУ▒ ржорзЛржмрж╛ржЗрж▓ ржлрзНрж░рзЗржирзНржбрж▓рж┐ ржбрж┐ржЬрж╛ржЗржи</li>
        <li>ЁЯТ╛ ржбрзЗржЯрж╛ ржПржХрзНрж╕ржкрзЛрж░рзНржЯ/ржЗржоржкрзЛрж░рзНржЯ</li>
      </ul>
      
      <h3>ЁЯЪА ржнржмрж┐рж╖рзНржпрзО ржкрж░рж┐ржХрж▓рзНржкржирж╛</h3>
      <ul>
        <li>ржЕржбрж┐ржУ ржЙржЪрзНржЪрж╛рж░ржг ржпрзЛржЧ ржХрж░рж╛</li>
        <li>ржЧрзНрж░рж╛ржорж╛рж░ рж╕рзЗржХрж╢ржи ржпрзЛржЧ ржХрж░рж╛</li>
        <li>ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ ржХрзБржЗржЬ рж╕рж┐рж╕рзНржЯрзЗржо</li>
        <li>ржЕржлрж▓рж╛ржЗржи рж╕рж╛ржкрзЛрж░рзНржЯ</li>
      </ul>
      
      <div style="margin-top: 30px; padding: 20px; background: #f8f9fa; border-radius: 10px;">
        <h4>ЁЯТМ ржЖржорж╛ржжрзЗрж░ ржорж┐рж╢ржи</h4>
        <p>ржЖржорж╛ржжрзЗрж░ ржорзВрж▓ рж▓ржХрзНрж╖рзНржп рж╣рж▓рзЛ ржЗржЙрж░рзЛржкрзЗ ржмрж╕ржмрж╛рж╕ржХрж╛рж░рзА ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзА рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ ржнрж╛рж╖рж╛ржЧржд ржмрж╛ржзрж╛ ржжрзВрж░ ржХрж░рж╛ ржПржмржВ рждрж╛ржжрзЗрж░ рж╕рж╛ржорж╛ржЬрж┐ржХ ржУ ржкрзЗрж╢рж╛ржЧржд ржЬрзАржмржирзЗ рж╕ржлрж▓рждрж╛ ржЕрж░рзНржЬржирзЗ рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рж╛ред</p>
      </div>
    </div>
  `;
  closeSideMenu();
}

function showContactPage() {
  hideHomePage();
  hideError();
  hideFavoritesControls();
  
  conversationArea.innerHTML = `
    <div class="page-content">
      <h2>ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи</h2>
      <p>ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рждрзЗ ржирж┐ржЪрзЗрж░ рждржерзНржпржЧрзБрж▓рзЛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи:</p>
      
      <div class="contact-section">
        <h3>ЁЯУз ржЗржорзЗржЗрж▓</h3>
        <p><a href="mailto:info@speakeu.com">info@speakeu.com</a></p>
        <p><a href="mailto:support@speakeu.com">support@speakeu.com</a></p>
      </div>
      
      <div class="contact-section">
        <h3>ЁЯУ▒ рж╕рзЛрж╢рзНржпрж╛рж▓ ржорж┐ржбрж┐ржпрж╝рж╛</h3>
        <p><a href="https://facebook.com/speakeu" target="_blank">ЁЯУШ Facebook</a></p>
        <p><a href="https://t.me/speakeu" target="_blank">ЁЯУв Telegram</a></p>
        <p><a href="https://youtube.com/speakeu" target="_blank">ЁЯУ║ YouTube</a></p>
      </div>
      
      <div class="contact-section">
        <h3>ЁЯХТ рж╕рж╛ржкрзЛрж░рзНржЯ рж╕ржоржпрж╝</h3>
        <p>рж╕рзЛржоржмрж╛рж░ - рж╢рзБржХрзНрж░ржмрж╛рж░: рж╕ржХрж╛рж▓ рзпржЯрж╛ - рж░рж╛ржд рзпржЯрж╛ (CET)</p>
        <p>рж╢ржирж┐ржмрж╛рж░ - рж░ржмрж┐ржмрж╛рж░: рж╕ржХрж╛рж▓ рззрзжржЯрж╛ - рж╕ржирзНржзрзНржпрж╛ рзмржЯрж╛ (CET)</p>
      </div>
      
      <div class="contact-section">
        <h3>ЁЯМН ржЕржлрж┐рж╕ ржарж┐ржХрж╛ржирж╛</h3>
        <p>Speak EU Headquarters<br>
        123 Language Learning Street<br>
        Brussels, Belgium</p>
      </div>
      
      <div class="contact-section">
        <h3>ЁЯЫая╕П ржЯрзЗржХржирж┐ржХрзНржпрж╛рж▓ рж╕рж╛ржкрзЛрж░рзНржЯ</h3>
        <p>ржпржжрж┐ ржЖржкржирж┐ ржХрзЛржирзЛ ржЯрзЗржХржирж┐ржХрзНржпрж╛рж▓ рж╕ржорж╕рзНржпрж╛рж░ рж╕ржорзНржорзБржЦрзАржи рж╣ржи, рждрж╛рж╣рж▓рзЗ ржжржпрж╝рж╛ ржХрж░рзЗ ржирж┐ржЪрзЗрж░ рждржерзНржпржЧрзБрж▓рзЛ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзЗ ржЖржорж╛ржжрзЗрж░ ржЬрж╛ржирж╛ржи:</p>
        <ul>
          <li>ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо ржУ ржнрж╛рж░рзНрж╕ржи</li>
          <li>ржбрж┐ржнрж╛ржЗрж╕рзЗрж░ ржзрж░ржи (ржХржорзНржкрж┐ржЙржЯрж╛рж░/ржорзЛржмрж╛ржЗрж▓)</li>
          <li>рж╕ржорж╕рзНржпрж╛рж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржмрж░рзНржгржирж╛</li>
        </ul>
      </div>
      
      <div style="margin-top: 30px; padding: 20px; background: #e8f5e8; border-radius: 10px;">
        <h4>ЁЯТб ржЖржкржирж╛рж░ ржорждрж╛ржоржд ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг</h4>
        <p>ржЖржкржирж╛рж░ ржпрзЗржХрзЛржирзЛ ржкрж░рж╛ржорж░рзНрж╢, ржорждрж╛ржоржд ржмрж╛ ржирждрзБржи ржлрж┐ржЪрж╛рж░рзЗрж░ ржЖржЗржбрж┐ржпрж╝рж╛ ржерж╛ржХрж▓рзЗ ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржиред ржЖржорж░рж╛ ржЖржкржирж╛ржжрзЗрж░ ржлрж┐ржбржмрзНржпрж╛ржХрзЗрж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржкрзНрж▓рзНржпрж╛ржЯржлрж░рзНржоржЯрж┐ ржЖрж░ржУ ржЙржирзНржиржд ржХрж░рждрзЗ ржЪрж╛ржЗред</p>
      </div>
    </div>
  `;
  closeSideMenu();
}

function showPrivacyPage() {
  hideHomePage();
  hideError();
  hideFavoritesControls();
  
  conversationArea.innerHTML = `
    <div class="page-content">
      <h2>ЁЯФТ ржЧрзЛржкржирзАржпрж╝рждрж╛ ржирзАрждрж┐</h2>
      <p><em>рж╕рж░рзНржмрж╢рзЗрж╖ ржЖржкржбрзЗржЯ: ${new Date().toLocaleDateString('bn-BD')}</em></p>
      
      <h3>ЁЯУЛ рждржерзНржп рж╕ржВржЧрзНрж░рж╣</h3>
      <p>ржЖржорж░рж╛ ржирж┐ржорзНржирж▓рж┐ржЦрж┐ржд рждржерзНржпржЧрзБрж▓рзЛ рж╕ржВржЧрзНрж░рж╣ ржХрж░рж┐:</p>
      <ul>
        <li><strong>ржмрзНржпржмрж╣рж╛рж░рзЗрж░ рждржерзНржп:</strong> ржЖржкржирж┐ ржХрзЛржи ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЗржи</li>
        <li><strong>ржлрзЗржнрж╛рж░рж┐ржЯ рждрж╛рж▓рж┐ржХрж╛:</strong> ржЖржкржирж╛рж░ рж╕рзЗржн ржХрж░рж╛ рж╢ржмрзНржжржЧрзБрж▓рзЛ</li>
        <li><strong>рж╕рзЗржЯрж┐ржВрж╕:</strong> ржерж┐ржо ржПржмржВ ржнрж╛рж╖рж╛рж░ ржкржЫржирзНржж</li>
      </ul>
      
      <h3>ЁЯТ╛ ржбрзЗржЯрж╛ рж╕ржВрж░ржХрзНрж╖ржг</h3>
      <p>ржЖржкржирж╛рж░ рж╕ржХрж▓ ржбрзЗржЯрж╛ ржЖржкржирж╛рж░ ржбрж┐ржнрж╛ржЗрж╕рзЗрж░ <strong>Local Storage</strong> ржП рж╕ржВрж░ржХрзНрж╖рж┐ржд рж╣ржпрж╝ред ржЖржорж░рж╛ ржХрзЛржирзЛ ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп ржЖржорж╛ржжрзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░рзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж┐ ржирж╛ред</p>
      
      <h3>ЁЯФР ржбрзЗржЯрж╛ ржирж┐рж░рж╛ржкрждрзНрждрж╛</h3>
      <ul>
        <li>ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ ржЖржкржирж╛рж░ ржбрж┐ржнрж╛ржЗрж╕рзЗржЗ ржерж╛ржХрзЗ</li>
        <li>ржЖржорж░рж╛ ржХрзЛржирзЛ рждрзГрждрзАржпрж╝ ржкржХрзНрж╖рзЗрж░ рж╕рж╛ржерзЗ ржЖржкржирж╛рж░ рждржерзНржп рж╢рзЗржпрж╝рж╛рж░ ржХрж░рж┐ ржирж╛</li>
        <li>ржЖржкржирж┐ ржпрзЗржХрзЛржирзЛ рж╕ржоржпрж╝ ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ ржбрж┐рж▓рж┐ржЯ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи</li>
      </ul>
      
      <h3>ЁЯНк ржХрзБржХрж┐ржЬ</h3>
      <p>ржЖржорж░рж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝ Local Storage ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж┐ред ржХрзЛржирзЛ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ ржХрзБржХрж┐ржЬ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржпрж╝ ржирж╛ред</p>
      
      <h3>ЁЯМР рждрзГрждрзАржпрж╝ ржкржХрзНрж╖рзЗрж░ рж╕рзЗржмрж╛</h3>
      <p>ржЖржорж╛ржжрзЗрж░ ржУржпрж╝рзЗржмрж╕рж╛ржЗржЯ рж╕ржорзНржкрзВрж░рзНржгржнрж╛ржмрзЗ рж╕рзНржЯрзНржпрж╛ржЯрж┐ржХ ржПржмржВ ржХрзЛржирзЛ рждрзГрждрзАржпрж╝ ржкржХрзНрж╖рзЗрж░ ржЯрзНрж░рзНржпрж╛ржХрж┐ржВ рж╕рж╛рж░рзНржнрж┐рж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржирж╛ред</p>
      
      <h3>ЁЯС╢ рж╢рж┐рж╢рзБржжрзЗрж░ ржЧрзЛржкржирзАржпрж╝рждрж╛</h3>
      <p>ржЖржорж╛ржжрзЗрж░ рж╕рзЗржмрж╛ рззрзй ржмржЫрж░рзЗрж░ ржХржо ржмржпрж╝рж╕рзА рж╢рж┐рж╢рзБржжрзЗрж░ ржЬржирзНржп ржиржпрж╝ред ржЖржорж░рж╛ ржЬрзЗржирзЗрж╢рзБржирзЗ рж╢рж┐рж╢рзБржжрзЗрж░ ржХрж╛ржЫ ржерзЗржХрзЗ ржмрзНржпржХрзНрждрж┐ржЧржд рждржерзНржп рж╕ржВржЧрзНрж░рж╣ ржХрж░рж┐ ржирж╛ред</p>
      
      <h3>ЁЯУЭ ржирзАрждрж┐ ржкрж░рж┐ржмрж░рзНрждржи</h3>
      <p>ржПржЗ ржЧрзЛржкржирзАржпрж╝рждрж╛ ржирзАрждрж┐рждрзЗ ржпрзЗржХрзЛржирзЛ ржкрж░рж┐ржмрж░рзНрждржи ржПржЗ ржкрзГрж╖рзНржарж╛ржпрж╝ ржкрзНрж░ржХрж╛рж╢ ржХрж░рж╛ рж╣ржмрзЗред ржЖржорж░рж╛ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржХрзНрж╖рзЗрждрзНрж░рзЗ ржЖрж▓рж╛ржжрж╛ ржирзЛржЯрж┐рж╢ ржкрзНрж░ржжрж╛ржи ржХрж░ржмред</p>
      
      <h3>ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ</h3>
      <p>ржЧрзЛржкржирзАржпрж╝рждрж╛ рж╕ржВржХрзНрж░рж╛ржирзНржд ржХрзЛржирзЛ ржкрзНрж░рж╢рзНржи ржерж╛ржХрж▓рзЗ ржЖржорж╛ржжрзЗрж░ рж╕рж╛ржерзЗ ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: <a href="mailto:privacy@speakeu.com">privacy@speakeu.com</a></p>
      
      <div style="margin-top: 30px; padding: 20px; background: #fff3cd; border-radius: 10px;">
        <h4>тЪЦя╕П ржЖржкржирж╛рж░ ржЕржзрж┐ржХрж╛рж░</h4>
        <ul>
          <li>ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ ржжрзЗржЦрж╛рж░ ржЕржзрж┐ржХрж╛рж░</li>
          <li>ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ рж╕ржВрж╢рзЛржзржирзЗрж░ ржЕржзрж┐ржХрж╛рж░</li>
          <li>ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ ржорзБржЫрзЗ ржлрзЗрж▓рж╛рж░ ржЕржзрж┐ржХрж╛рж░</li>
          <li>ржЖржкржирж╛рж░ ржбрзЗржЯрж╛ ржкрзЛрж░рзНржЯ ржХрж░рж╛рж░ ржЕржзрж┐ржХрж╛рж░</li>
        </ul>
      </div>
    </div>
  `;
  closeSideMenu();
}

function showFavoritesPage() {
  hideHomePage();
  hideError();
  
  let favoritesHtml = `
    <div class="page-content">
      <h2>тЭдя╕П ржлрзЗржнрж╛рж░рж┐ржЯ рждрж╛рж▓рж┐ржХрж╛</h2>
      <div class="favorites-overview">
  `;
  
  let totalFavorites = 0;
  for (const [lang, items] of Object.entries(favorites)) {
    if (items.length > 0) {
      totalFavorites += items.length;
      const langName = getLanguageName(lang);
      favoritesHtml += `
        <div class="favorite-lang-section">
          <h3>${langName}: ${items.length} ржЯрж┐ ржЖржЗржЯрзЗржо</h3>
          <button onclick="loadLanguage('${lang}')" class="control-btn">ржжрзЗржЦрзБржи</button>
        </div>
      `;
    }
  }
  
  if (totalFavorites === 0) {
    favoritesHtml += `
      <div class="no-favorites" style="text-align: center; padding: 40px;">
        <h3>ржХрзЛржирзЛ ржлрзЗржнрж╛рж░рж┐ржЯ ржЖржЗржЯрзЗржо ржирзЗржЗ</h3>
        <p>ржПржХржЯрж┐ ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзЗ ржХрж┐ржЫрзБ рж╢ржмрзНржж ржлрзЗржнрж╛рж░рж┐ржЯ ржХрж░рзБржиред</p>
      </div>
    `;
  } else {
    favoritesHtml += `
      <div style="margin-top: 30px;">
        <h3>ЁЯУК ржкрж░рж┐рж╕ржВржЦрзНржпрж╛ржи</h3>
        <p>ржорзЛржЯ ржлрзЗржнрж╛рж░рж┐ржЯ: <strong>${totalFavorites}</strong> ржЯрж┐</p>
        <p>ржнрж╛рж╖рж╛рж░ рж╕ржВржЦрзНржпрж╛: <strong>${Object.keys(favorites).filter(lang => favorites[lang].length > 0).length}</strong> ржЯрж┐</p>
      </div>
    `;
  }
  
  favoritesHtml += `
      </div>
      <div style="margin-top: 30px;">
        <button onclick="exportFavorites()" class="control-btn">ЁЯУд рж╕ржм ржлрзЗржнрж╛рж░рж┐ржЯ Export ржХрж░рзБржи</button>
        <button onclick="importFavorites()" class="control-btn">ЁЯУе ржлрзЗржнрж╛рж░рж┐ржЯ Import ржХрж░рзБржи</button>
      </div>
    </div>
  `;
  
  conversationArea.innerHTML = favoritesHtml;
  closeSideMenu();
}

// Helper function to get language name
function getLanguageName(langCode) {
  const langNames = {
    italy: 'ЁЯЗоЁЯЗ╣ ржЗрждрж╛рж▓рж┐',
    spain: 'ЁЯЗкЁЯЗ╕ рж╕рзНржкрзЗржи',
    germany: 'ЁЯЗйЁЯЗк ржЬрж╛рж░рзНржорж╛ржирж┐',
    france: 'ЁЯЗлЁЯЗ╖ ржлрзНрж░рж╛ржирзНрж╕',
    russian: 'ЁЯЗ╖ЁЯЗ║ рж░рж╛рж╢рж┐ржпрж╝рж╛ржи',
    portugal: 'ЁЯЗ╡ЁЯЗ╣ ржкрж░рзНрждрзБржЧрж╛рж▓',
    greece: 'ЁЯЗмЁЯЗ╖ ржЧрзНрж░рж┐рж╕',
    netherlands: 'ЁЯЗ│ЁЯЗ▒ ржирзЗржжрж╛рж░рж▓рзНржпрж╛ржирзНржбрж╕',
    poland: 'ЁЯЗ╡ЁЯЗ▒ ржкрзЛрж▓рзНржпрж╛ржирзНржб',
    austria: 'ЁЯЗжЁЯЗ╣ ржЕрж╕рзНржЯрзНрж░рж┐ржпрж╝рж╛',
    belgium: 'ЁЯЗзЁЯЗк ржмрзЗрж▓ржЬрж┐ржпрж╝рж╛ржо',
    czech: 'ЁЯЗиЁЯЗ┐ ржЪрзЗржХ ржкрзНрж░ржЬрж╛рждржирзНрждрзНрж░',
    denmark: 'ЁЯЗйЁЯЗ░ ржбрзЗржиржорж╛рж░рзНржХ',
    estonia: 'ЁЯЗкЁЯЗк ржПрж╕рзНрждрзЛржирж┐ржпрж╝рж╛',
    finland: 'ЁЯЗлЁЯЗо ржлрж┐ржирж▓рзНржпрж╛ржирзНржб',
    hungary: 'ЁЯЗнЁЯЗ║ рж╣рж╛ржЩрзНржЧрзЗрж░рж┐',
    iceland: 'ЁЯЗоЁЯЗ╕ ржЖржЗрж╕рж▓рзНржпрж╛ржирзНржб',
    latvia: 'ЁЯЗ▒ЁЯЗ╗ рж▓рж╛ржЯржнрж┐ржпрж╝рж╛',
    liechtenstein: 'ЁЯЗ▒ЁЯЗо рж▓рж┐ржЪрзЗржирж╕рзНржЯрж╛ржЗржи',
    lithuania: 'ЁЯЗ▒ЁЯЗ╣ рж▓рж┐ржерзБржпрж╝рж╛ржирж┐ржпрж╝рж╛',
    luxembourg: 'ЁЯЗ▒ЁЯЗ║ рж▓рзБржХрзНрж╕рзЗржоржмрж╛рж░рзНржЧ',
    malta: 'ЁЯЗ▓ЁЯЗ╣ ржорж╛рж▓рзНржЯрж╛',
    norway: 'ЁЯЗ│ЁЯЗ┤ ржирж░ржУржпрж╝рзЗ',
    slovakia: 'ЁЯЗ╕ЁЯЗ░ рж╕рзНрж▓рзЛржнрж╛ржХрж┐ржпрж╝рж╛',
    slovenia: 'ЁЯЗ╕ЁЯЗо рж╕рзНрж▓рзЛржнрзЗржирж┐ржпрж╝рж╛',
    sweden: 'ЁЯЗ╕ЁЯЗк рж╕рзБржЗржбрзЗржи',
    switzerland: 'ЁЯЗиЁЯЗн рж╕рзБржЗржЬрж╛рж░рж▓рзНржпрж╛ржирзНржб',
    albania: 'ЁЯЗжЁЯЗ▒ ржЖрж▓ржмрзЗржирж┐ржпрж╝рж╛',
    andorra: 'ЁЯЗжЁЯЗй ржЖржирзНржжрзЛрж░рж╛',
    armenia: 'ЁЯЗжЁЯЗ▓ ржЖрж░рзНржорзЗржирж┐ржпрж╝рж╛',
    azerbaijan: 'ЁЯЗжЁЯЗ┐ ржЖржЬрж╛рж░ржмрж╛ржЗржЬрж╛ржи',
    bosnia: 'ЁЯЗзЁЯЗж ржмрж╕ржирж┐ржпрж╝рж╛ ржУ рж╣рж╛рж░рзНржЬрзЗржЧрзЛржнрж┐ржирж╛',
    bulgaria: 'ЁЯЗзЁЯЗм ржмрзБрж▓ржЧрзЗрж░рж┐ржпрж╝рж╛',
    croatia: 'ЁЯЗнЁЯЗ╖ ржХрзНрж░рзЛржпрж╝рзЗрж╢рж┐ржпрж╝рж╛',
    cyprus: 'ЁЯЗиЁЯЗ╛ рж╕рж╛ржЗржкрзНрж░рж╛рж╕',
    georgia: 'ЁЯЗмЁЯЗк ржЬрж░рзНржЬрж┐ржпрж╝рж╛',
    ireland: 'ЁЯЗоЁЯЗк ржЖржпрж╝рж╛рж░рж▓рзНржпрж╛ржирзНржб',
    kosovo: 'ЁЯЗ╜ЁЯЗ░ ржХрж╕рзЛржнрзЛ',
    moldova: 'ЁЯЗ▓ЁЯЗй ржорж▓ржжрзЛржнрж╛',
    monaco: 'ЁЯЗ▓ЁЯЗи ржорзЛржирж╛ржХрзЛ',
    montenegro: 'ЁЯЗ▓ЁЯЗк ржоржирзНржЯрзЗржирзЗржЧрзНрж░рзЛ',
    northmacedonia: 'ЁЯЗ▓ЁЯЗ░ ржЙрждрзНрждрж░ ржорзЗрж╕рж┐ржбрзЛржирж┐ржпрж╝рж╛',
    romania: 'ЁЯЗ╖ЁЯЗ┤ рж░рзЛржорж╛ржирж┐ржпрж╝рж╛',
    sanmarino: 'ЁЯЗ╕ЁЯЗ▓ рж╕рж╛ржи ржорж╛рж░рж┐ржирзЛ',
    serbia: 'ЁЯЗ╖ЁЯЗ╕ рж╕рж╛рж░рзНржмрж┐ржпрж╝рж╛',
    turkey: 'ЁЯЗ╣ЁЯЗ╖ рждрзБрж░рж╕рзНржХ',
    ukraine: 'ЁЯЗ║ЁЯЗж ржЗржЙржХрзНрж░рзЗржи',
    unitedkingdom: 'ЁЯЗмЁЯЗз ржпрзБржХрзНрждрж░рж╛ржЬрзНржп',
    vatican: 'ЁЯЗ╗ЁЯЗж ржнрзНржпрж╛ржЯрж┐ржХрж╛ржи рж╕рж┐ржЯрж┐'
  };
  return langNames[langCode] || langCode;
}

// Close side menu
function closeSideMenu() {
  const sideMenu = document.getElementById('side-menu');
  if (sideMenu) {
    sideMenu.classList.remove('active');
  }
}

// Theme toggle
modeToggle.addEventListener('click', () => {
  const isDark = document.body.classList.toggle('dark-mode');
  modeToggle.textContent = isDark ? 'ЁЯМЩ' : 'тШАя╕П';
  localStorage.setItem('theme', isDark ? 'dark' : 'light');
});

// Menu toggle functionality
const menuToggle = document.getElementById('menu-toggle');
const sideMenu = document.getElementById('side-menu');

if (menuToggle && sideMenu) {
  menuToggle.addEventListener('click', () => {
    sideMenu.classList.toggle('active');
  });
}

// Close menu button
const closeMenu = document.getElementById('close-menu');
if (closeMenu && sideMenu) {
  closeMenu.addEventListener('click', () => {
    sideMenu.classList.remove('active');
  });
}

// Close menu when clicking outside
document.addEventListener('click', (e) => {
  if (sideMenu && sideMenu.classList.contains('active')) {
    if (!sideMenu.contains(e.target) && !menuToggle.contains(e.target)) {
      sideMenu.classList.remove('active');
    }
  }
});
